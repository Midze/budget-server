# ------------------------------------------------------
# THIS FILE WAS AUTOMATICALLY GENERATED (DO NOT MODIFY)
# ------------------------------------------------------

type User {
  _id: String!
  login: String!
  password: String!
  email: String!
  createdAt: String!
  roles: Roles
}

"""Roles for Admin creating projects and users"""
enum Roles {
  Admin
  Basic
}

type LoginUser {
  user: User!
  token: String!
}

type Categories {
  _id: String!
  userId: String!
  childOf: String
  name: String!
}

type Expense {
  category: String!
  price: String!
}

type ExpensesByPeriod {
  total: Float!
  expenses: [Expense!]!
}

type ExpensesForDay {
  total: Float!
  expenses: [Expense!]!
  _id: String
}

type ExpensesForMonth {
  day: ExpensesForDay!
  week: ExpensesByPeriod!
  month: ExpensesByPeriod!
}

type ExpensesWithCategories {
  day: ExpensesForDay!
  week: ExpensesByPeriod!
  month: ExpensesByPeriod!
  categories: [Categories!]!
}

type Query {
  getHello: String!
  findAllUsers: [User!]!
  findOne(_id: String!): User!
  getCurrentUser(id: String!): User!
  getMonthExpenses(userId: String!, month: Float!, year: Float!, week: Float!, day: Float!): ExpensesWithCategories!
  getCategories(userId: String!): [Categories!]!
}

type Mutation {
  createUser(createUserInput: CreateUserInput!): User!
  login(password: String!, email: String!): LoginUser!
  UpdateUserInput(updateUserInput: UpdateUserInput!): User!
  UpdateUserPass(newPass: String!, currPass: String!): User!
  removeUser(_id: String!): User!
  createExpenses(createExpensesInput: CreateExpensesInput!): ExpensesForMonth!
  updateExpenses(updateExpenseInput: UpdateExpensesInput!, _id: String!): ExpensesForMonth!
  removeExpensesCategory(month: Float!, year: Float!, week: Float!, day: Float!, userId: String!, ids: [String!]!): ExpensesWithCategories!
  createCategory(createCategoryInput: CreateCategoryInput!): Categories!
  removeCategory(userId: String!, ids: [String!]!): [Categories!]!
}

input CreateUserInput {
  login: String!
  email: String!
  password: String!
}

input UpdateUserInput {
  login: String
  email: String
}

input CreateExpensesInput {
  userId: String!
  year: Float!
  month: Float!
  day: Float!
  week: Float!
  expenses: [ExpenseInput!]!
}

input ExpenseInput {
  category: String!
  price: String!
}

input UpdateExpensesInput {
  userId: String
  expenses: [ExpenseInput!]
}

input CreateCategoryInput {
  userId: String!
  name: String!
  childOf: String
}
